// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NARFO_BE.Models;

namespace NARFO_BE.Migrations
{
    [DbContext(typeof(narfoContext))]
    [Migration("20190214233418_EndorsementApplication")]
    partial class EndorsementApplication
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.1-servicing-10028")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("NARFO_BE.Models.Action", b =>
                {
                    b.Property<int>("ActionId")
                        .HasColumnName("ActionID");

                    b.Property<string>("Action1")
                        .HasColumnName("Action")
                        .HasMaxLength(50);

                    b.Property<string>("ShortCode")
                        .HasMaxLength(10);

                    b.HasKey("ActionId");

                    b.ToTable("Action");
                });

            modelBuilder.Entity("NARFO_BE.Models.Activity", b =>
                {
                    b.Property<int>("ActiviryId")
                        .HasColumnName("ActiviryID");

                    b.Property<DateTime?>("ActivityDate")
                        .HasColumnType("date");

                    b.Property<string>("ActivityDescription")
                        .HasMaxLength(500)
                        .IsUnicode(false);

                    b.Property<string>("ActivityType")
                        .HasMaxLength(200)
                        .IsUnicode(false);

                    b.Property<string>("Caliber")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<DateTime?>("DateSubmitted")
                        .HasColumnType("date");

                    b.Property<string>("FirearmType")
                        .HasMaxLength(500)
                        .IsUnicode(false);

                    b.Property<string>("MemNo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<short?>("PostalShoot");

                    b.Property<double?>("Score");

                    b.HasKey("ActiviryId");

                    b.HasIndex("MemNo");

                    b.ToTable("Activity");
                });

            modelBuilder.Entity("NARFO_BE.Models.ActivityLookup", b =>
                {
                    b.Property<int>("ActivityLookupId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Activity")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.HasKey("ActivityLookupId");

                    b.ToTable("ActivityLookup");
                });

            modelBuilder.Entity("NARFO_BE.Models.Administrator", b =>
                {
                    b.Property<int>("AdminId")
                        .HasColumnName("AdminID");

                    b.Property<string>("MemNo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("MemType")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.HasKey("AdminId")
                        .HasName("PK_Administrator_1");

                    b.HasIndex("MemNo");

                    b.ToTable("Administrator");
                });

            modelBuilder.Entity("NARFO_BE.Models.ApplicationLookup", b =>
                {
                    b.Property<int>("AppLookupId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("AppLookupID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ApplicationType")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .IsUnicode(false);

                    b.Property<decimal?>("UnitStandard")
                        .HasColumnType("numeric(10, 0)");

                    b.HasKey("AppLookupId");

                    b.ToTable("ApplicationLookup");
                });

            modelBuilder.Entity("NARFO_BE.Models.BankDetails", b =>
                {
                    b.Property<string>("BankDetailsId")
                        .HasColumnName("BankDetailsID")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<decimal?>("AccountNumber")
                        .HasColumnType("numeric(18, 0)");

                    b.Property<string>("BranchCode")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Company")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<decimal?>("ContactNumber")
                        .HasColumnType("numeric(10, 0)");

                    b.HasKey("BankDetailsId");

                    b.ToTable("BankDetails");
                });

            modelBuilder.Entity("NARFO_BE.Models.Branch", b =>
                {
                    b.Property<string>("Branch1")
                        .HasColumnName("Branch")
                        .HasMaxLength(255);

                    b.HasKey("Branch1");

                    b.ToTable("Branch");
                });

            modelBuilder.Entity("NARFO_BE.Models.Club", b =>
                {
                    b.Property<int>("ClubId")
                        .HasColumnName("ClubID");

                    b.Property<string>("Administartion")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("ClubEmail")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("ClubName")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("ClubPostAddress1")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int?>("ClubPostCode");

                    b.Property<decimal?>("ClubTelNo")
                        .HasColumnType("numeric(10, 0)");

                    b.Property<string>("ClubWebSite")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Executive")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Fard")
                        .HasColumnName("FARD")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Fards")
                        .HasColumnName("FARDS")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Secretary")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.HasKey("ClubId");

                    b.ToTable("Club");
                });

            modelBuilder.Entity("NARFO_BE.Models.Comission", b =>
                {
                    b.Property<short>("ComissionId")
                        .HasColumnName("ComissionID");

                    b.Property<string>("Branch")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("ClientMemNo")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<decimal?>("Code")
                        .HasColumnType("numeric(10, 0)");

                    b.Property<DateTime?>("ComDate")
                        .HasColumnType("date");

                    b.Property<string>("ComType")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<decimal?>("Comission1")
                        .HasColumnName("Comission")
                        .HasColumnType("money");

                    b.Property<short?>("Paid");

                    b.Property<DateTime?>("PaymentDate")
                        .HasColumnType("date");

                    b.Property<short?>("PaymentId")
                        .HasColumnName("PaymentID");

                    b.Property<string>("PaymentMethod")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<string>("PaymentTransNo")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("RepNo")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("TransactionNo")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.HasKey("ComissionId");

                    b.HasIndex("Code");

                    b.HasIndex("PaymentId");

                    b.HasIndex("TransactionNo");

                    b.ToTable("Comission");
                });

            modelBuilder.Entity("NARFO_BE.Models.CommissionStructure", b =>
                {
                    b.Property<int>("ComSid")
                        .HasColumnName("ComSID");

                    b.Property<decimal?>("Code")
                        .HasColumnType("numeric(10, 0)");

                    b.Property<int?>("Commission");

                    b.Property<string>("Description")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.HasKey("ComSid");

                    b.HasIndex("Code");

                    b.ToTable("CommissionStructure");
                });

            modelBuilder.Entity("NARFO_BE.Models.CostCode", b =>
                {
                    b.Property<decimal>("Code")
                        .HasColumnType("numeric(10, 0)");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .IsUnicode(false);

                    b.Property<string>("Type")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.HasKey("Code");

                    b.ToTable("CostCode");
                });

            modelBuilder.Entity("NARFO_BE.Models.DedicatedStatus", b =>
                {
                    b.Property<int>("DedicatedId")
                        .HasColumnName("DedicatedID");

                    b.Property<DateTime?>("ApplicationDate")
                        .HasColumnType("date");

                    b.Property<string>("Approved")
                        .HasMaxLength(2)
                        .IsUnicode(false);

                    b.Property<DateTime?>("DateApproved")
                        .HasColumnType("date");

                    b.Property<Guid?>("DocLink");

                    b.Property<string>("Dsno")
                        .HasColumnName("DSNo")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Dstype")
                        .HasColumnName("DSType")
                        .HasMaxLength(500)
                        .IsUnicode(false);

                    b.Property<string>("MemNo")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Motivation")
                        .HasMaxLength(500)
                        .IsUnicode(false);

                    b.Property<string>("RefusalReason")
                        .IsRequired()
                        .HasMaxLength(500)
                        .IsUnicode(false);

                    b.Property<string>("Termination")
                        .HasMaxLength(2)
                        .IsUnicode(false);

                    b.Property<string>("TerminationReason")
                        .HasMaxLength(500)
                        .IsUnicode(false);

                    b.Property<string>("Transfare")
                        .HasMaxLength(2)
                        .IsUnicode(false);

                    b.Property<string>("TrasfDsno")
                        .HasColumnName("TrasfDSNo")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<string>("TrsfAssociation")
                        .HasMaxLength(500)
                        .IsUnicode(false);

                    b.Property<decimal?>("TrsfAssociationFarn")
                        .HasColumnName("TrsfAssociationFARN")
                        .HasColumnType("numeric(10, 0)");

                    b.HasKey("DedicatedId");

                    b.HasIndex("MemNo");

                    b.ToTable("DedicatedStatus");
                });

            modelBuilder.Entity("NARFO_BE.Models.Dslookup", b =>
                {
                    b.Property<int>("DslookupId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("DSLookupID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DedicatedStatus")
                        .HasMaxLength(255);

                    b.HasKey("DslookupId");

                    b.ToTable("DSLookup");
                });

            modelBuilder.Entity("NARFO_BE.Models.Endorsement", b =>
                {
                    b.Property<int>("EndorsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("EndorsID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Action")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Calibre")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<DateTime?>("EndorsementDate")
                        .HasColumnType("date");

                    b.Property<string>("EndorsementNo")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("EndorsementType")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("('Hunting; Sports Shooting; Self Protection')")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Fcasection")
                        .HasColumnName("FCASection")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("FireArmMakeModel")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("FireArmType")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("('Handgun; Rifle; Self Loading Rifle; Shotgun')")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("MemNo")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("SerialNumber")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.HasKey("EndorsId");

                    b.HasIndex("FireArmType");

                    b.HasIndex("MemNo");

                    b.ToTable("Endorsement");
                });

            modelBuilder.Entity("NARFO_BE.Models.EndorsementApplication", b =>
                {
                    b.Property<int>("EndorsAppID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ActionType");

                    b.Property<string>("ApplicationType");

                    b.Property<DateTime?>("ApprovalDate");

                    b.Property<string>("Caliber");

                    b.Property<bool>("Declaration");

                    b.Property<bool>("DedicatedStatus");

                    b.Property<string>("FireArmType");

                    b.Property<string>("Make");

                    b.Property<string>("Model");

                    b.Property<string>("Motivation");

                    b.Property<string>("Section");

                    b.Property<string>("SerialNumber");

                    b.Property<string>("Status");

                    b.Property<string>("Title");

                    b.HasKey("EndorsAppID");

                    b.ToTable("EndorsementApplication");
                });

            modelBuilder.Entity("NARFO_BE.Models.FireArmType", b =>
                {
                    b.Property<string>("FireArmType1")
                        .HasColumnName("FireArmType")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.HasKey("FireArmType1");

                    b.ToTable("FireArmType");
                });

            modelBuilder.Entity("NARFO_BE.Models.Member", b =>
                {
                    b.Property<string>("MemNo")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<decimal?>("CellNo")
                        .HasColumnType("numeric(10, 0)");

                    b.Property<string>("City")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int?>("ClubId")
                        .HasColumnName("ClubID");

                    b.Property<string>("CurrentAssName")
                        .HasMaxLength(500)
                        .IsUnicode(false);

                    b.Property<string>("CurrentAssociation")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("Ethinicity")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<DateTime?>("ExpiryDate")
                        .HasColumnType("date");

                    b.Property<string>("Firstname")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Idno")
                        .HasColumnName("IDNo")
                        .HasMaxLength(13)
                        .IsUnicode(false);

                    b.Property<DateTime?>("InceptionDate")
                        .HasColumnType("date");

                    b.Property<short?>("IntHunting");

                    b.Property<short?>("IntRecretional");

                    b.Property<short?>("IntSelfDefence");

                    b.Property<short?>("IntShooting");

                    b.Property<short?>("IntSportShooting");

                    b.Property<string>("MemType")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("('Representative; Ordinary; Executive; Client; Owner')")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<decimal?>("MyBonusNo")
                        .HasColumnType("numeric(18, 0)");

                    b.Property<short?>("NoOfFa")
                        .HasColumnName("NoOfFA");

                    b.Property<int?>("Owner");

                    b.Property<string>("Password")
                        .HasMaxLength(500)
                        .IsUnicode(false);

                    b.Property<short?>("PendingRenewal");

                    b.Property<string>("PhysicalAddress")
                        .HasMaxLength(200)
                        .IsUnicode(false);

                    b.Property<short?>("PostalCode");

                    b.Property<string>("Province")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Sex")
                        .HasMaxLength(6)
                        .IsUnicode(false);

                    b.Property<string>("Suburb")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(5)
                        .IsUnicode(false);

                    b.Property<short?>("TypeFahg")
                        .HasColumnName("TypeFAHG");

                    b.Property<short?>("TypeFarifle")
                        .HasColumnName("TypeFARifle");

                    b.Property<short?>("TypeFasa")
                        .HasColumnName("TypeFASA");

                    b.Property<short?>("TypeFasg")
                        .HasColumnName("TypeFASG");

                    b.Property<short?>("TypeHuntingBiltong");

                    b.Property<short?>("TypeHuntingOutfitter");

                    b.Property<short?>("TypeHuntingPh")
                        .HasColumnName("TypeHuntingPH");

                    b.Property<short?>("TypeHuntingTrophy");

                    b.Property<short?>("TypeSshg")
                        .HasColumnName("TypeSSHG");

                    b.Property<short?>("TypeSsmg")
                        .HasColumnName("TypeSSMG");

                    b.Property<short?>("TypeSsrlr")
                        .HasColumnName("TypeSSRLR");

                    b.Property<short?>("TypeSsrsr")
                        .HasColumnName("TypeSSRSR");

                    b.Property<short?>("TypeSssa")
                        .HasColumnName("TypeSSSA");

                    b.Property<short?>("TypeSssg")
                        .HasColumnName("TypeSSSG");

                    b.Property<string>("Username")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.HasKey("MemNo");

                    b.HasIndex("ClubId");

                    b.HasIndex("Owner");

                    b.ToTable("Member");
                });

            modelBuilder.Entity("NARFO_BE.Models.MemberTypeLookUp", b =>
                {
                    b.Property<int>("MemberTypeId")
                        .HasColumnName("MemberTypeID");

                    b.Property<string>("MemberType")
                        .HasMaxLength(50);

                    b.HasKey("MemberTypeId");

                    b.ToTable("MemberTypeLookUp");
                });

            modelBuilder.Entity("NARFO_BE.Models.MyTable", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("TblName");

                    b.Property<string>("Weather");

                    b.HasKey("ID");

                    b.ToTable("MyTable");
                });

            modelBuilder.Entity("NARFO_BE.Models.Outlets", b =>
                {
                    b.Property<int>("Owner");

                    b.Property<string>("Address")
                        .HasMaxLength(500)
                        .IsUnicode(false);

                    b.Property<string>("City")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Outlet")
                        .HasMaxLength(120);

                    b.Property<decimal?>("PostalCode")
                        .HasColumnType("numeric(6, 0)");

                    b.Property<decimal?>("TellNumber")
                        .HasColumnType("numeric(10, 0)");

                    b.HasKey("Owner");

                    b.ToTable("Outlets");
                });

            modelBuilder.Entity("NARFO_BE.Models.Payment", b =>
                {
                    b.Property<short>("PaymentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("PaymentID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("MemNo")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("PaymentType")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.HasKey("PaymentId");

                    b.HasIndex("MemNo");

                    b.ToTable("Payment");
                });

            modelBuilder.Entity("NARFO_BE.Models.PendingRenewal", b =>
                {
                    b.Property<int>("RenewalD");

                    b.Property<int?>("FeeType");

                    b.Property<short?>("FinalYear");

                    b.Property<string>("MemNo")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Outlet")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<short?>("Paid");

                    b.Property<DateTime?>("RenewalDate")
                        .HasColumnType("smalldatetime");

                    b.Property<decimal?>("RenewalFee")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("SalesRep")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.HasKey("RenewalD");

                    b.HasIndex("MemNo");

                    b.ToTable("PendingRenewal");
                });

            modelBuilder.Entity("NARFO_BE.Models.Qualification", b =>
                {
                    b.Property<short>("QualificationId")
                        .HasColumnName("QualificationID");

                    b.Property<string>("Assessment")
                        .HasMaxLength(500)
                        .IsUnicode(false);

                    b.Property<DateTime?>("AssessmentDate")
                        .HasColumnType("date");

                    b.Property<string>("AssessmentNo")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("LinkDoc")
                        .HasMaxLength(500)
                        .IsUnicode(false);

                    b.Property<string>("MemNo")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<double?>("Result");

                    b.HasKey("QualificationId");

                    b.HasIndex("MemNo");

                    b.ToTable("Qualification");
                });

            modelBuilder.Entity("NARFO_BE.Models.SalesReps", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnName("ID");

                    b.Property<decimal?>("AccountNo")
                        .HasColumnType("numeric(15, 0)");

                    b.Property<string>("AccountType")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<string>("Frequency")
                        .HasMaxLength(2)
                        .IsUnicode(false);

                    b.Property<string>("MemNo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.HasIndex("MemNo");

                    b.ToTable("SalesReps");
                });

            modelBuilder.Entity("NARFO_BE.Models.SectionLookup", b =>
                {
                    b.Property<int>("SectionLookUpId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Section")
                        .HasMaxLength(255);

                    b.HasKey("SectionLookUpId");

                    b.ToTable("SectionLookup");
                });

            modelBuilder.Entity("NARFO_BE.Models.Transaction", b =>
                {
                    b.Property<string>("TransactionNo")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<decimal?>("Amount")
                        .HasColumnType("money");

                    b.Property<string>("Beneficiary")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<DateTime?>("DatePaid")
                        .HasColumnType("date");

                    b.Property<string>("Description")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<DateTime?>("ExpiryDate")
                        .HasColumnType("date");

                    b.Property<DateTime?>("InceptionDate")
                        .HasColumnType("date");

                    b.Property<DateTime?>("InvoiceDate")
                        .HasColumnType("date");

                    b.Property<int?>("InvoiceNo");

                    b.Property<short?>("Loan");

                    b.Property<string>("LoanSponsor")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("MemNo")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<short?>("Paid");

                    b.Property<short>("PaymentId")
                        .HasColumnName("PaymentID");

                    b.Property<string>("PaymentMethod")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<string>("ReceiptNo")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("RepTransNo")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("StoreTransNo")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<decimal?>("Vat")
                        .HasColumnType("money");

                    b.Property<short?>("Vatable");

                    b.Property<DateTime?>("Year")
                        .HasColumnType("smalldatetime");

                    b.HasKey("TransactionNo");

                    b.HasIndex("MemNo");

                    b.HasIndex("PaymentId");

                    b.ToTable("Transaction");
                });

            modelBuilder.Entity("NARFO_BE.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnName("UserID");

                    b.Property<string>("AccountStatus")
                        .HasMaxLength(255);

                    b.Property<string>("Activated");

                    b.Property<string>("DisplayName")
                        .HasMaxLength(255);

                    b.Property<string>("Email")
                        .HasMaxLength(255);

                    b.Property<string>("Ethnicity")
                        .HasMaxLength(255);

                    b.Property<string>("ExpiryDate");

                    b.Property<string>("Gender")
                        .HasMaxLength(255);

                    b.Property<string>("InceptionDate");

                    b.Property<string>("Lastname")
                        .HasMaxLength(255);

                    b.Property<string>("Name")
                        .HasMaxLength(255);

                    b.Property<DateTime?>("Registered")
                        .HasColumnType("datetime");

                    b.Property<string>("Role")
                        .HasMaxLength(255);

                    b.Property<string>("SalesRep")
                        .HasMaxLength(255);

                    b.Property<string>("Tak")
                        .HasMaxLength(255);

                    b.Property<string>("Username")
                        .HasMaxLength(255);

                    b.HasKey("UserId");

                    b.ToTable("User");
                });

            modelBuilder.Entity("NARFO_BE.Models.Activity", b =>
                {
                    b.HasOne("NARFO_BE.Models.Member", "MemNoNavigation")
                        .WithMany("Activity")
                        .HasForeignKey("MemNo")
                        .HasConstraintName("FK_Activity_Member");
                });

            modelBuilder.Entity("NARFO_BE.Models.Administrator", b =>
                {
                    b.HasOne("NARFO_BE.Models.Member", "MemNoNavigation")
                        .WithMany("Administrator")
                        .HasForeignKey("MemNo")
                        .HasConstraintName("FK_Administrator_Member");
                });

            modelBuilder.Entity("NARFO_BE.Models.Comission", b =>
                {
                    b.HasOne("NARFO_BE.Models.CostCode", "CodeNavigation")
                        .WithMany("Comission")
                        .HasForeignKey("Code")
                        .HasConstraintName("FK_Comission_CostCode");

                    b.HasOne("NARFO_BE.Models.Payment", "Payment")
                        .WithMany("Comission")
                        .HasForeignKey("PaymentId")
                        .HasConstraintName("FK_Comission_Payment");

                    b.HasOne("NARFO_BE.Models.Transaction", "TransactionNoNavigation")
                        .WithMany("Comission")
                        .HasForeignKey("TransactionNo")
                        .HasConstraintName("FK_Comission_Transaction");
                });

            modelBuilder.Entity("NARFO_BE.Models.CommissionStructure", b =>
                {
                    b.HasOne("NARFO_BE.Models.CostCode", "CodeNavigation")
                        .WithMany("CommissionStructure")
                        .HasForeignKey("Code")
                        .HasConstraintName("FK_CommissionStructure_CostCode");
                });

            modelBuilder.Entity("NARFO_BE.Models.DedicatedStatus", b =>
                {
                    b.HasOne("NARFO_BE.Models.Member", "MemNoNavigation")
                        .WithMany("DedicatedStatus")
                        .HasForeignKey("MemNo")
                        .HasConstraintName("FK_DedicatedStatus_Member");
                });

            modelBuilder.Entity("NARFO_BE.Models.Endorsement", b =>
                {
                    b.HasOne("NARFO_BE.Models.FireArmType", "FireArmTypeNavigation")
                        .WithMany("Endorsement")
                        .HasForeignKey("FireArmType")
                        .HasConstraintName("FK_Endorsement_FireArmType");

                    b.HasOne("NARFO_BE.Models.Member", "MemNoNavigation")
                        .WithMany("Endorsement")
                        .HasForeignKey("MemNo")
                        .HasConstraintName("FK_Endorsement_Member");
                });

            modelBuilder.Entity("NARFO_BE.Models.Member", b =>
                {
                    b.HasOne("NARFO_BE.Models.Club", "Club")
                        .WithMany("Member")
                        .HasForeignKey("ClubId")
                        .HasConstraintName("FK_Member_Club");

                    b.HasOne("NARFO_BE.Models.Outlets", "OwnerNavigation")
                        .WithMany("Member")
                        .HasForeignKey("Owner")
                        .HasConstraintName("FK_Member_Outlets");
                });

            modelBuilder.Entity("NARFO_BE.Models.Payment", b =>
                {
                    b.HasOne("NARFO_BE.Models.Member", "MemNoNavigation")
                        .WithMany("Payment")
                        .HasForeignKey("MemNo")
                        .HasConstraintName("FK_Payment_Member");
                });

            modelBuilder.Entity("NARFO_BE.Models.PendingRenewal", b =>
                {
                    b.HasOne("NARFO_BE.Models.Member", "MemNoNavigation")
                        .WithMany("PendingRenewalNavigation")
                        .HasForeignKey("MemNo")
                        .HasConstraintName("FK_PendingRenewal_Member");
                });

            modelBuilder.Entity("NARFO_BE.Models.Qualification", b =>
                {
                    b.HasOne("NARFO_BE.Models.Member", "MemNoNavigation")
                        .WithMany("Qualification")
                        .HasForeignKey("MemNo")
                        .HasConstraintName("FK_Qualification_Member");
                });

            modelBuilder.Entity("NARFO_BE.Models.SalesReps", b =>
                {
                    b.HasOne("NARFO_BE.Models.Member", "MemNoNavigation")
                        .WithMany("SalesReps")
                        .HasForeignKey("MemNo")
                        .HasConstraintName("FK_SalesReps_Member");
                });

            modelBuilder.Entity("NARFO_BE.Models.Transaction", b =>
                {
                    b.HasOne("NARFO_BE.Models.Member", "MemNoNavigation")
                        .WithMany("Transaction")
                        .HasForeignKey("MemNo")
                        .HasConstraintName("FK_Transaction_Member");

                    b.HasOne("NARFO_BE.Models.Payment", "Payment")
                        .WithMany("Transaction")
                        .HasForeignKey("PaymentId")
                        .HasConstraintName("FK_Transaction_Payment");
                });
#pragma warning restore 612, 618
        }
    }
}
